{"version":3,"sources":["serviceWorker.js","index.js","components/App.js","components/Navbar.js","components/Main.js","photo.png"],"names":["Boolean","window","location","hostname","match","ReactDOM","render","react_default","a","createElement","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","ipfs","require","ipfsClient","host","port","protocol","props","_this","Object","_home_harsha_Documents_blockchain_dgram_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","this","_home_harsha_Documents_blockchain_dgram_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_home_harsha_Documents_blockchain_dgram_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","captureFile","event","preventDefault","file","target","files","reader","FileReader","readAsArrayBuffer","onloadend","setState","buffer","Buffer","result","console","log","state","uploadImage","description","add","error","loading","dgram","methods","hash","send","from","account","on","tipImageOwner","id","tipAmount","value","images","loadWeb3","loadBlockchainData","ethereum","web3","Web3","enable","currentProvider","alert","eth","getAccounts","accounts","net","getId","networkID","networkData","Dgram","networks","Contract","abi","address","imageCount","imagesCount","i","image","concat","_home_harsha_Documents_blockchain_dgram_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","sort","b","react__WEBPACK_IMPORTED_MODULE_8___default","_Navbar__WEBPACK_IMPORTED_MODULE_12__","className","class","role","_Main__WEBPACK_IMPORTED_MODULE_13__","Component","Navbar","react__WEBPACK_IMPORTED_MODULE_5___default","Fragment","htmlfor","href","src","width","height","style","marginLeft","color","type","marginTop","marginRight","alt","Identicon","toString","Main","isOpen","imageUrl","handleShowDialog","curr","_this2","onClick","maxWidth","onSubmit","imageDescription","ref","input","placeholder","required","accept","onChange","map","key","margin","cursor","marginBottom","author","utils","fromWei","name","disabled","toWei","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.6dc2b02a.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport 'bootstrap/dist/js/bootstrap'\nimport App from './components/App';\nimport './index.css'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from \"react\";\nimport Web3 from \"web3\";\nimport \"./App.css\";\nimport Dgram from \"../abis/Dgram.json\";\nimport Navbar from \"./Navbar\";\nimport Main from \"./Main\";\n\nconst ipfsClient = require(\"ipfs-http-client\");\nconst ipfs = ipfsClient({\n  host: \"ipfs.infura.io\",\n  port: 5001,\n  protocol: \"https\",\n});\n\nclass App extends Component {\n  async componentWillMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: \"\",\n      dgram: [],\n      images: [],\n      loading: true,\n    };\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert(\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\n      );\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3;\n\n    const accounts = await web3.eth.getAccounts();\n    this.setState({ account: accounts[0] });\n\n    const networkID = await web3.eth.net.getId();\n    const networkData = Dgram.networks[networkID];\n\n    if (networkData) {\n      const dgram = web3.eth.Contract(Dgram.abi, networkData.address);\n      this.setState({ dgram });\n      const imagesCount = await dgram.methods.imageCount().call();\n\n      for (let i = 1; i <= imagesCount; i++) {\n        const image = await dgram.methods.images(i).call();\n        this.setState({ images: [...this.state.images, image] });\n      }\n\n      this.setState({\n        images: this.state.images.sort((a, b) => b.tipAmount - a.tipAmount),\n      });\n\n      this.setState({ imagesCount, loading: false });\n    } else {\n      window.alert(\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\n      );\n    }\n  }\n\n  captureFile = (event) => {\n    event.preventDefault();\n    const file = event.target.files[0];\n    const reader = new window.FileReader();\n    reader.readAsArrayBuffer(file);\n\n    reader.onloadend = () => {\n      this.setState({ buffer: Buffer(reader.result) });\n      console.log(\"buffer\", this.state.buffer);\n    };\n  };\n\n  uploadImage = (description) => {\n    console.log(\"Submitting file to ipfs...\");\n\n    //adding file to the IPFS\n    ipfs.add(this.state.buffer, (error, result) => {\n      console.log(\"Ipfs result\", result);\n      if (error) {\n        console.error(error);\n        return;\n      }\n\n      this.setState({ loading: true });\n      this.state.dgram.methods\n        .uploadImage(result[0].hash, description)\n        .send({ from: this.state.account })\n        .on(\"transactionHash\", (hash) => {\n          this.setState({ loading: false });\n        });\n    });\n  };\n\n  tipImageOwner = (id, tipAmount) => {\n    this.setState({ loading: true });\n    this.state.dgram.methods\n      .tipImageOwner(id)\n      .send({ from: this.state.account, value: tipAmount })\n      .on(\"transactionHash\", (hash) => {\n        this.setState({ loading: false });\n      });\n  };\n\n  render() {\n    return (\n      <div>\n        <Navbar account={this.state.account} />\n        {this.state.loading ? (\n          <div id=\"loader\" className=\"text-center mt-5\">\n            <div class=\"spinner-border\" role=\"status\">\n              <span class=\"sr-only\">Loading...</span>\n            </div>\n          </div>\n        ) : (\n          <Main\n            images={this.state.images}\n            captureFile={this.captureFile}\n            uploadImage={this.uploadImage}\n            tipImageOwner={this.tipImageOwner}\n            account={this.state.account}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from \"react\";\nimport Identicon from \"identicon.js\";\nimport photo from \"../photo.png\";\nimport \"./Navbar.css\";\nclass Navbar extends Component {\n  render() {\n    return (\n      <>\n        <nav className=\"navbar\">\n          <label\n            className=\"navbar-toggle\"\n            id=\"js-navbar-toggle\"\n            htmlfor=\"chkToggle\"\n          >\n            <i className=\"fa fa-bars\"></i>\n          </label>\n          <a href=\"#\" className=\"logo\">\n            <img\n              src=\"https://i.imgur.com/2uIVYqX.png\"\n              width=\"50\"\n              height=\"50\"\n              style={{ marginLeft: \"50px\" }}\n            ></img>\n            <span style={{ color: \"black\", marginLeft: \"10px\" }}>Newko</span>\n          </a>\n          <input type=\"checkbox\" id=\"chkToggle\"></input>\n          <ul className=\"main-nav\" id=\"js-menu\" style={{ marginTop: \"10px\" }}>\n            {this.props.account ? (\n              <button\n                style={{ marginRight: \"10px\" }}\n                type=\"button\"\n                className=\"btn btn-success position-relative\"\n              >\n                Connected\n              </button>\n            ) : (\n              <button\n                style={{ marginRight: \"10px\" }}\n                type=\"button\"\n                className=\"btn btn-danger position-relative\"\n              >\n                Disconnected\n              </button>\n            )}\n\n            <small style={{ color: \"black\", marginTop: \"7px\" }}>\n              <small id=\"account\">{this.props.account}</small>\n            </small>\n            {this.props.account ? (\n              <img\n                alt=\"stfu3\"\n                className=\"ml-2\"\n                width=\"40\"\n                height=\"40\"\n                src={`data:image/png;base64,${new Identicon(\n                  this.props.account,\n                  30\n                ).toString()}`}\n              />\n            ) : (\n              <span></span>\n            )}\n          </ul>\n        </nav>\n      </>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport Identicon from \"identicon.js\";\nimport \"./Helper.css\";\n\nclass Main extends Component {\n  state = { isOpen: false, imageUrl: \"\" };\n  handleShowDialog = (curr) => {\n    this.setState({ isOpen: !this.state.isOpen, imageUrl: curr });\n    console.log(\"cliked\");\n  };\n  render() {\n    if (this.state.isOpen) {\n      return (\n        <div className=\"modal-content\">\n          <img\n            className=\"modal-image\"\n            src={`https://ipfs.infura.io/ipfs/${this.state.imageUrl}`}\n            alt=\"idk\"\n            onClick={() => this.handleShowDialog(this.state.imageUrl)}\n          />\n        </div>\n      );\n    }\n    return (\n      <div className=\"container-fluid mt-5\">\n        <div className=\"row\">\n          <main\n            role=\"main\"\n            className=\"col-lg-12 ml-auto mr-auto\"\n            style={{ maxWidth: \"800px\" }}\n          >\n            <div className=\"content mr-auto ml-auto\">\n              <p>&nbsp;</p>\n              <h2>Create a Post</h2>\n              <form\n                onSubmit={(event) => {\n                  event.preventDefault();\n                  const description = this.imageDescription.value;\n                  this.props.uploadImage(description);\n                }}\n              >\n                <input\n                  id=\"imageDescription\"\n                  type=\"text\"\n                  ref={(input) => {\n                    this.imageDescription = input;\n                  }}\n                  className=\"form-control\"\n                  placeholder=\"Write Your Post's Title\"\n                  required\n                />\n                <br />\n                <div className=\"input-group mb-3\">\n                  <div className=\"input-group-prepend\">\n                    <span className=\"input-group-text\">Upload</span>\n                  </div>\n\n                  <div className=\"custom-file\">\n                    <input\n                      type=\"file\"\n                      accept=\".jpg, .jpeg, .png, .bmp, .gif\"\n                      onChange={this.props.captureFile}\n                      className=\"custom-file-input\"\n                    />\n                    <label\n                      className=\"custom-file-label\"\n                      htmlfor=\"inputGroupFile01\"\n                    >\n                      Select a File\n                    </label>\n                  </div>\n                </div>\n                <div className=\"form-group mr-sm-2\"></div>\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block btn-lg\"\n                >\n                  Create Post\n                </button>\n              </form>\n\n              <p>&nbsp;</p>\n              {this.props.images.map((image, key) => {\n                return (\n                  <>\n                    <div className=\"card\" style={{ margin: \"20px\" }}>\n                      <img\n                        style={{ cursor: \"pointer\" }}\n                        onClick={() => this.handleShowDialog(image.hash)}\n                        className=\"card-img-top\"\n                        src={`https://ipfs.infura.io/ipfs/${image.hash}`}\n                      />\n\n                      <div className=\"card-body\">\n                        <img\n                          alt=\"stfu\"\n                          className=\"mr-2\"\n                          width=\"30\"\n                          height=\"30\"\n                          style={{ marginBottom: \"5px\" }}\n                          src={`data:image/png;base64,${new Identicon(\n                            image.author,\n                            30\n                          ).toString()}`}\n                        />\n                        <small className=\"text-muted\">{image.author}</small>\n\n                        <h5 className=\"card-title\">{image.description}</h5>\n                        {/* <p class=\"card-text\">\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ab accusantium ad alias, aliquid amet aspernatur atque culpa cum debitis dicta doloremque, dolorum ea eos et excepturi explicabo facilis harum illo impedit incidunt laborum laudantium...\n          </p> */}\n                        <p className=\"card-text\">\n                          <small className=\"float-left mt-1 text-muted\">\n                            TIPS:{\" \"}\n                            {window.web3.utils.fromWei(\n                              image.tipAmount.toString(),\n                              \"Ether\"\n                            )}{\" \"}\n                            ETH\n                          </small>\n                        </p>\n                        <button\n                          className=\"btn btn-link btn-sm float-right pt-0\"\n                          name={image.id}\n                          disabled={\n                            image.author === this.props.account ? true : false\n                          }\n                          onClick={(event) => {\n                            let tipAmount = window.web3.utils.toWei(\n                              \"0.1\",\n                              \"Ether\"\n                            );\n                            console.log(event.target.name, tipAmount);\n                            this.props.tipImageOwner(\n                              event.target.name,\n                              tipAmount\n                            );\n                          }}\n                        >\n                          TIP 0.1 ETH\n                        </button>\n                      </div>\n                    </div>\n                  </>\n                );\n              })}\n            </div>\n          </main>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","module.exports = __webpack_public_path__ + \"static/media/photo.d6cbd8e6.png\";"],"sourceRoot":""}